{
    "what is python": "Python is a high-level, interpreted programming language known for its simplicity and readability.",
    "how to install python": "You can install Python from the official website: https://www.python.org/downloads/",
    "what is the latest version of python": "You can check the latest Python version at https://www.python.org/downloads/. As of now, Python 3.10 is the latest stable version.",
    "what is a python list": "A list in Python is a collection of ordered elements, which can be of different types (integers, strings, etc.). You can define a list using square brackets, e.g., [1, 2, 3].",
    "how to create a function in python": "In Python, you can create a function using the 'def' keyword. Example: def my_function():",
    "what is the difference between a list and a tuple": "A list is mutable, meaning you can modify it after creation, while a tuple is immutable, meaning it cannot be modified once created.",
    "what is a dictionary in python": "A dictionary in Python is an unordered collection of key-value pairs. You can create it using curly braces, e.g., {'key': 'value'}.",
    "what is a python set": "A set in Python is an unordered collection of unique elements. Sets are created using curly braces, e.g., {1, 2, 3}.",
    "how to import a module in python": "You can import a module using the 'import' keyword. Example: import math",
    "how to install a python package": "You can install a Python package using the 'pip' command. Example: pip install numpy",
    "what is an exception in python": "An exception in Python is an error that occurs during the execution of the program. You can handle exceptions using 'try' and 'except' blocks.",
    "how to handle exceptions in python": "You can handle exceptions using 'try' and 'except' blocks. Example: try: # code except Exception as e: print(e)",
    "what is the difference between '==' and 'is' in python": "'==' checks if the values of two objects are equal, while 'is' checks if two objects refer to the same memory location.",
    "what is python's garbage collection": "Python uses automatic memory management with garbage collection to handle the allocation and deallocation of memory for objects.",
    "how to concatenate strings in python": "You can concatenate strings in Python using the '+' operator. Example: 'Hello' + ' ' + 'World' results in 'Hello World'.",
    "what is slicing in python": "Slicing in Python allows you to extract a portion of a sequence (like a list or string) using the syntax 'sequence[start:stop:step]'.",
    "how to check the data type of a variable in python": "You can check the data type of a variable using the 'type()' function. Example: type(x)",
    "what is a lambda function in python": "A lambda function is an anonymous function defined using the 'lambda' keyword. Example: f = lambda x: x + 2",
    "how to read a file in python": "You can read a file in Python using the 'open()' function and the 'read()' method. Example: f = open('file.txt', 'r') content = f.read()",
    "how to write to a file in python": "You can write to a file using the 'open()' function in 'w' or 'a' mode, then using the 'write()' method. Example: f = open('file.txt', 'w') f.write('Hello World')",
    "what are python's built-in data types": "Python has several built-in data types, including int, float, str, list, tuple, set, and dict.",
    "what is a class in python": "A class in Python is a blueprint for creating objects (instances). It defines properties and methods that the objects will have.",
    "how to create an object from a class in python": "You create an object by calling the class as if it were a function. Example: obj = MyClass()",
    "what is inheritance in python": "Inheritance in Python allows one class to inherit the properties and methods of another class. This helps in code reuse.",
    "what is polymorphism in python": "Polymorphism in Python allows objects of different classes to be treated as instances of the same class. It is typically implemented through method overriding.",
    "how to create a virtual environment in python": "You can create a virtual environment in Python using the 'venv' module. Example: python -m venv myenv",
    "how to activate a virtual environment in python": "You can activate a virtual environment using the following command: source myenv/bin/activate (Linux/Mac) or myenv\\Scripts\\activate (Windows).",
    "how to deactivate a virtual environment in python": "You can deactivate a virtual environment by running the command: deactivate.",
    "what is pip in python": "Pip is the package installer for Python. It allows you to install and manage Python packages.",
    "what is the difference between Python 2 and Python 3": "Python 3 introduced many improvements over Python 2, including better Unicode support, print function changes, and integer division behavior.",
    "how to check if a number is prime in python": "You can check if a number is prime by iterating over all integers up to the square root of the number and checking for divisibility.",
    "what is the 'self' keyword in python": "The 'self' keyword in Python is used to refer to the instance of the class. It is used to access attributes and methods within the class."
}
